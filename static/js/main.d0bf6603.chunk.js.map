{"version":3,"sources":["components/calculator/styles/calculator.js","components/calculator/index.js","Context.js","Container/Header.js","Calculator.js","themes/themes.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Display","theme","displayText","screenBack","ButtonsContainer","keypadBack","Button","button","name","keyTextColor","delResetKeyShadow","equalKeyShadow","keyShadow","delResetKeyBack","equalKeyBack","keyBack","Header","Logo","h2","TogglerContainer","ThemeText","h3","Toggler","OptionContainer","Option","span","ThemeSelectors","Theme","id","Calculator","children","restProps","Context","createContext","ContextProvider","useState","selection","setSelection","display","setDisplay","currVal","setCurrVal","prevVal","setPrevVal","operations","setOperations","computation","value","operationCurrValPrevVal","prevValNumber","parseFloat","currValNumber","isNaN","String","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","Provider","handleTheme","handleKeyPress","prevState","slice","includes","HeaderComponent","useContext","map","item","inx","onClick","CalculatorComp","position","GlobalStyles","createGlobalStyle","mainBack","themes","delResetEqualKeyTextColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0bf6603.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n//I USE STYLED COMPONENTS WITH COMPOUND COMPONENTS TO HAVE MORE CONTROL OVER HOW I WANT TO DISPLAY THE CALCULATOR ELEMENTS\n\nexport const Container = styled.div`\n  width: 320px;\n  height: auto;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  background: transparent; \n  }\n\n  @media (min-width: 1000px) {\n    width: 500px;\n  }\n`;\n\nexport const Display = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  word-wrap: break-word;\n  word-break: break-all;\n  min-height: 100px;\n  margin-bottom: 1rem;\n  border: none;\n  outline: none;\n  padding: 0.3em;\n  text-align: right;\n  border-radius: 10px;\n  caret-color: transparent;\n  color: ${({ theme }) => theme.displayText};\n  background: ${({ theme }) => theme.screenBack};\n`;\n\nexport const ButtonsContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 0.1rem;\n  height: 420px;\n  border-radius: 10px;\n  background: ${({ theme }) => theme.keypadBack};\n\n  @media (min-width: 1000px) {\n    padding: 0.5em;\n    height: auto;\n  }\n`;\n\nexport const Button = styled.button`\n  width: ${({ name }) => (name === \"RESET\" || name === \"=\" ? \"120px\" : \"60px\")};\n  height: 65px;\n  border-radius: 5px;\n  border: none;\n  margin: 0.2em;\n  font-size: ${({ name }) => (name === \"DEL\" || name === \"RESET\") && \"20px\"};\n\n  color: ${({ theme, name }) =>\n    name === \"RESET\" || name === \"DEL\" || name === \"=\"\n      ? theme.displayText\n      : theme.keyTextColor};\n\n  box-shadow: ${({ theme, name }) =>\n    name === \"DEL\" || name === \"RESET\"\n      ? `0 5px 1px 0px ${theme.delResetKeyShadow}`\n      : name === \"=\"\n      ? `0 5px 1px 0px ${theme.equalKeyShadow}`\n      : `0 5px 1px 0px ${theme.keyShadow}`};\n\n  background: ${({ theme, name }) =>\n    name === \"DEL\" || name === \"RESET\"\n      ? theme.delResetKeyBack\n      : name === \"=\"\n      ? theme.equalKeyBack\n      : theme.keyBack};\n\n  &:active {\n    transform: scale(0.99);\n    box-shadow: none;\n  }\n\n  @media (min-width: 1000px) {\n    width: ${({ name }) =>\n      name === \"RESET\" || name === \"=\" ? \"200px\" : \"90px\"};\n    margin-bottom: 0.5em;\n  }\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: ${({ theme }) => theme.displayText};\n`;\nexport const Logo = styled.h2``;\n\nexport const TogglerContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\nexport const ThemeText = styled.h3`\n  font-size: 14px;\n  margin-right: 1.3em;\n  margin-bottom: 0.2em;\n`;\nexport const Toggler = styled.div``;\n\nexport const OptionContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.2em 0.3em;\n`;\n\nexport const Option = styled.span`\n  font-size: 15px;\n`;\n\nexport const ThemeSelectors = styled.div`\n  width: 80px;\n  height: 30px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.2em;\n  border-radius: 15px;\n  background: ${({ theme }) => theme.keypadBack};\n`;\n\nexport const Theme = styled.button`\n  width: 15px;\n  height: 15px;\n  border: none;\n  border-radius: 50%;\n  background: ${({ theme, id }) =>\n    theme.id === id ? theme.equalKeyBack : \"transparent\"};\n`;\n","import {\n  Container,\n  Display,\n  ButtonsContainer,\n  Button,\n  Header,\n  Logo,\n  TogglerContainer,\n  ThemeText,\n  Toggler,\n  Option,\n  ThemeSelectors,\n  Theme,\n  OptionContainer,\n} from \"./styles/calculator\";\n\n//ALL THE COMPONENTS THAT WILL CREATE MY CALCULATOR\n\nexport default function Calculator({ children, ...restProps }) {\n  return <Container {...restProps}>{children}</Container>;\n}\n\nCalculator.Display = function CalculatorDisplay({ ...restProps }) {\n  return <Display {...restProps}></Display>;\n};\n\nCalculator.ButtonsContainer = function CalculatorButtonsContainer({\n  children,\n  ...restProps\n}) {\n  return <ButtonsContainer {...restProps}>{children}</ButtonsContainer>;\n};\n\nCalculator.Button = function CalculatorButton({ children, ...restProps }) {\n  return <Button {...restProps}>{children}</Button>;\n};\n\nCalculator.Header = function CalculatorHeader({ children, ...restProps }) {\n  return <Header {...restProps}>{children}</Header>;\n};\n\nCalculator.Logo = function CalculatorLogo({ children, ...restProps }) {\n  return <Logo {...restProps}>{children}</Logo>;\n};\n\nCalculator.TogglerContainer = function CalculatorTogglerContainer({\n  children,\n  ...restProps\n}) {\n  return <TogglerContainer {...restProps}>{children}</TogglerContainer>;\n};\n\nCalculator.ThemeText = function CalculatorThemeText({\n  children,\n  ...restProps\n}) {\n  return <ThemeText {...restProps}>{children}</ThemeText>;\n};\n\nCalculator.Toggler = function CalculatorToggler({ children, ...restProps }) {\n  return <Toggler {...restProps}>{children}</Toggler>;\n};\n\nCalculator.Option = function CalculatorOption({ children, ...restProps }) {\n  return <Option {...restProps}>{children}</Option>;\n};\n\nCalculator.ThemeSelectors = function CalculatorThemeSelectors({\n  children,\n  ...restProps\n}) {\n  return <ThemeSelectors {...restProps}>{children}</ThemeSelectors>;\n};\n\nCalculator.Theme = function CalculatorTheme({ children, ...restProps }) {\n  return <Theme {...restProps}>{children}</Theme>;\n};\n\nCalculator.OptionContainer = function CalculatorOptionContainer({\n  children,\n  ...restProps\n}) {\n  return <OptionContainer {...restProps}>{children}</OptionContainer>;\n};\n","import { useState, createContext, useEffect } from \"react\";\n\nconst Context = createContext();\n\nfunction ContextProvider({ children }) {\n  const [selection, setSelection] = useState(1); // this state controls wich theme is displayed\n  const [display, setDisplay] = useState(\"\"); //this state is in charge of displaying the operations in our calculators screen\n  const [currVal, setCurrVal] = useState(\"\"); // saves the current value we are going to compute\n  const [prevVal, setPrevVal] = useState(\"\"); // saves the previous value we are going to compute\n  const [operations, setOperations] = useState(\"\"); // this state saves the current operation we need to do\n\n  //here i assign the chosen theme to selection\n  function handleTheme(id) {\n    setSelection(id);\n  }\n\n  function computation(value = \"\") {\n    let operationCurrValPrevVal = 0; //new variable that will store the operation between currVall and prevVal\n    const prevValNumber = parseFloat(prevVal);\n    const currValNumber = parseFloat(currVal); // since we are using string to concatenate all of our values i need to transform them into numbers in order to compute them\n    if (isNaN(prevValNumber) || isNaN(currValNumber)) return; //if currVal and prevVal are not numbers we terminate the case to prevent an expression like this (110 + \"\") from being executed\n    switch (operations) {\n      //if both values are numbers we compute them according to the operation selected in operations state\n      case \"+\":\n        operationCurrValPrevVal = prevValNumber + currValNumber;\n        break;\n      case \"-\":\n        operationCurrValPrevVal = prevValNumber - currValNumber;\n        break;\n      case \"*\":\n        operationCurrValPrevVal = prevValNumber * currValNumber;\n        break;\n      case \"/\":\n        operationCurrValPrevVal = prevValNumber / currValNumber;\n        break;\n      default:\n        // if any other key that is not an operation it will either keep concatenating the current value of terminate this case\n        return;\n    }\n    if (!value) {\n      // if we press = to get our result we will have no operation value therefore we set our currVal as the result of our operation bacause if we dont do that we will have as states currVal=\"\" operation=\"\" and prevVal=operationcurrValprevVal wich will not let us select an operation since currVal is empty. The opposite case is if we get the result from pressing operation we get currVal=\"\" operation=operation and prevVal=number wich leave us set up to choose next number and prevent us from being stuck in the condition  (if (currVal === \"\") return) from operation case.\n      setCurrVal(String(operationCurrValPrevVal));\n      setOperations(value);\n      setPrevVal(\"\");\n      setDisplay(operationCurrValPrevVal + value);\n      return;\n    }\n    setCurrVal(\"\"); // operationcurrvalprevval is stored in currVal as the new current value in case we want to keep doing operations\n    setOperations(value); // if we execute computation() from the operation case we will pass value as the new operation for the next computation, if computation() is executed from the = case we will not pass any value settin the operation to an empty string\n    setPrevVal(String(operationCurrValPrevVal)); // we set prevVal to an empty string to make room for the next value we will compute\n    setDisplay(operationCurrValPrevVal + value); // if we executed computation from the operation case the new operation (value) will concatenate to our display for the next computation\n  }\n\n  function handleKeyPress(value) {\n    switch (value) {\n      case \"DEL\":\n        if (currVal) {\n          // if currVal has a value we will be able to delete the number\n          setDisplay((prevState) => prevState.slice(0, -1));\n          setCurrVal((prevState) => prevState.slice(0, -1));\n        }\n        break;\n      case \"RESET\": // if you press reset all the states will return to their initial value\n        setDisplay(\"\");\n        setOperations(\"\");\n        setCurrVal(\"\");\n        setPrevVal(\"\");\n        break;\n      case \"=\": // if we press the = button computation will be executed as well\n        computation();\n        break;\n      case \"+\":\n      case \"*\":\n      case \"-\":\n      case \"/\":\n        if (currVal === \"\") return; // if currVal is empty you cannnot select an operation and this case will be terminated\n        setDisplay((prevState) => prevState + value);\n        if (prevVal !== \"\") {\n          //if case was not terminated because currVal had a value and prevVal has also a value we compute both values with operation selected to update our display with this operation executing computation()\n          return computation(value);\n        }\n        setOperations(value); // if preVal is empty we assign the operation (value) to our state operations\n        setPrevVal(currVal); // since we are creating a new operation we store our currVal in prevVal to store our new number in currVal and have two numbers that we can use to compute (operationCurrValPrevVal)\n        setCurrVal(\"\"); // i set currVal to empty string to make room for new number\n        break;\n      default:\n        // this code will execute if we press a number or point key\n        if (currVal.includes(\".\") && value === \".\") return; // if display already has a point and our current pressed key (value) is a point we dont concatenate anything\n        setDisplay((prevState) => prevState + value); // i concatenate all pressed number in display\n        setCurrVal((prevState) => prevState + value); // all numbers all concatenaded in currVal before selecting the type of operation the program will execute\n    }\n  }\n\n  // iuse useeffect to save the theme selected by the user and load it anytime the page is refreshed\n  useEffect(() => {\n    const data = localStorage.getItem(\"my-theme\");\n    if (data) {\n      setSelection(JSON.parse(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"my-theme\", JSON.stringify(selection));\n  });\n\n  // in value i store all the states i will use for the programs logic\n  return (\n    <Context.Provider\n      value={{\n        handleTheme,\n        selection,\n        handleKeyPress,\n        display,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\n//exporting the provider of context and our full context object to use with useContext\n\nexport { ContextProvider, Context };\n","import { Calculator } from \"../components\";\nimport { useContext } from \"react\";\nimport { Context } from \"../Context\";\n\nfunction HeaderComponent() {\n  const selectors = [1, 2, 3];\n  const { handleTheme } = useContext(Context);\n  return (\n    <Calculator.Header>\n      <Calculator.Logo>calc</Calculator.Logo>\n      <Calculator.TogglerContainer>\n        <Calculator.ThemeText>THEME</Calculator.ThemeText>\n        <Calculator.Toggler>\n          <Calculator.OptionContainer>\n            <Calculator.Option>1</Calculator.Option>\n            <Calculator.Option>2</Calculator.Option>\n            <Calculator.Option>3</Calculator.Option>\n          </Calculator.OptionContainer>\n          <Calculator.ThemeSelectors>\n            {selectors.map((item, inx) => (\n              <Calculator.Theme\n                key={inx}\n                id={item}\n                onClick={() => handleTheme(item)}\n              />\n            ))}\n          </Calculator.ThemeSelectors>\n        </Calculator.Toggler>\n      </Calculator.TogglerContainer>\n    </Calculator.Header>\n  );\n}\n\nexport default HeaderComponent;\n","import { Calculator } from \"./components\";\nimport HeaderComponent from \"./Container/Header\";\nimport { useContext } from \"react\";\nimport { Context } from \"./Context\";\n\nfunction CalculatorComp() {\n  const { handleKeyPress, display } = useContext(Context);\n  const keys = [\n    { value: 7, position: 0 },\n    { value: 8, position: 1 },\n    { value: 9, position: 2 },\n    { value: \"DEL\", position: 3 },\n    { value: 4, position: 4 },\n    { value: 5, position: 5 },\n    { value: 6, position: 6 },\n    { value: \"+\", position: 7 },\n    { value: 1, position: 8 },\n    { value: 2, position: 9 },\n    { value: 3, position: 10 },\n    { value: \"-\", position: 11 },\n    { value: \".\", position: 12 },\n    { value: 0, position: 13 },\n    { value: \"/\", position: 14 },\n    { value: \"*\", position: 15 },\n    { value: \"RESET\", position: 16 },\n    { value: \"=\", position: 17 },\n  ];\n  return (\n    <Calculator>\n      <HeaderComponent />\n      <Calculator.Display>{display}</Calculator.Display>\n      <Calculator.ButtonsContainer>\n        {keys.map((item) => (\n          <Calculator.Button\n            key={item.position}\n            onClick={() => handleKeyPress(item.value)}\n            name={item.value}\n          >\n            {item.value}\n          </Calculator.Button>\n        ))}\n      </Calculator.ButtonsContainer>\n    </Calculator>\n  );\n}\n\nexport default CalculatorComp;\n","import { createGlobalStyle } from \"styled-components\";\n\n//these are the general styles i will use for the site\nexport const GlobalStyles = createGlobalStyle`\n    * {\n      box-sizing: border-box;\n      font-size: 32px;\n      font-family: \"Spartan\", sans-serif;\n      font-weight: 700; \n    }\n\n    body {   \n      height: 90vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: ${({ theme }) => theme.mainBack};\n    }\n`;\n\n//the colors that represent each theme\nexport const themes = {\n  1: {\n    id: 1,\n    mainBack: \"hsl(222, 26%, 31%)\",\n    keypadBack: \"hsl(223, 31%, 20%)\",\n    screenBack: \"hsl(224, 36%, 15%)\",\n    delResetKeyBack: \"hsl(225, 21%, 49%)\",\n    delResetKeyShadow: \"hsl(224, 28%, 35%)\",\n    equalKeyBack: \"hsl(6, 63%, 50%)\",\n    equalKeyShadow: \"hsl(6, 70%, 34%)\",\n    keyBack: \"hsl(30, 25%, 89%)\",\n    keyShadow: \"hsl(28, 16%, 65%)\",\n    keyTextColor: \"hsl(221, 14%, 31%)\",\n    delResetEqualKeyTextColor: \"hsl(0, 100%, 100%)\",\n    displayText: \"hsl(30, 25%, 89%)\",\n  },\n  2: {\n    id: 2,\n    mainBack: \"hsl(0, 0%, 90%)\",\n    keypadBack: \"hsl(0, 5%, 81%)\",\n    screenBack: \"hsl(0, 0%, 93%)\",\n    delResetKeyBack: \"hsl(185, 42%, 37%)\",\n    delResetKeyShadow: \"hsl(185, 58%, 25%)\",\n    equalKeyBack: \"hsl(25, 98%, 40%)\",\n    equalKeyShadow: \"hsl(25, 99%, 27%)\",\n    keyBack: \"hsl(45, 7%, 89%)\",\n    keyShadow: \"hsl(35, 11%, 61%)\",\n    keyTextColor: \"hsl(60, 10%, 19%)\",\n    delResetEqualKeyTextColor: \"hsl(0, 100%, 100%)\",\n    displayText: \"hsl(60, 10%, 19%)\",\n  },\n  3: {\n    id: 3,\n    mainBack: \"hsl(268, 75%, 9%)\",\n    keypadBack: \"hsl(268, 71%, 12%)\",\n    screenBack: \"hsl(268, 71%, 12%)\",\n    delResetKeyBack: \"hsl(281, 89%, 26%)\",\n    delResetKeyShadow: \"hsl(285, 91%, 52%)\",\n    equalKeyBack: \"hsl(176, 100%, 44%)\",\n    equalKeyShadow: \"hsl(177, 92%, 70%)\",\n    keyBack: \"hsl(268, 47%, 21%)\",\n    keyShadow: \"hsl(290, 70%, 36%)\",\n    keyTextColor: \"hsl(52, 100%, 62%)\",\n    delResetEqualKeyTextColor: \"hsl(0, 100%, 100%)\",\n    displayText: \"hsl(52, 100%, 62%)\",\n  },\n};\n\n// # Front-end Style Guide\n\n// ## Layout\n\n// The designs were created to the following widths:\n\n// - Mobile: 375px\n// - Desktop: 1440px\n\n// ## Colors\n\n// ### Theme 1\n\n// #### Backgrounds\n\n// - Very dark desaturated blue (main background): hsl(222, 26%, 31%)\n// - Very dark desaturated blue (toggle background, keypad background): hsl(223, 31%, 20%)\n// - Very dark desaturated blue (screen background): hsl(224, 36%, 15%)\n\n// #### Keys\n\n// - Desaturated dark blue (key background): hsl(225, 21%, 49%)\n// - Desaturated dark blue (key shadow): hsl(224, 28%, 35%)\n\n// - Red (key background, toggle): hsl(6, 63%, 50%)\n// - Dark red (key shadow): hsl(6, 70%, 34%)\n\n// - Light grayish orange (key background): hsl(30, 25%, 89%)\n// - Grayish orange (key shadow): hsl(28, 16%, 65%)\n\n// #### Text\n\n// - Very dark grayish blue: hsl(221, 14%, 31%)\n// - White: hsl(0, 0, 100%)\n\n// ### Theme 2\n\n// #### Backgrounds\n\n// - Light gray (main background): hsl(0, 0%, 90%)\n// - Grayish red (toggle background, keypad background): hsl(0, 5%, 81%)\n// - Very light gray (screen background): hsl(0, 0%, 93%)\n\n// #### Keys\n\n// - Dark moderate cyan (key background): hsl(185, 42%, 37%)\n// - Very dark cyan (key shadow): hsl(185, 58%, 25%)\n\n// - Orange (key background, toggle): hsl(25, 98%, 40%)\n// - Dark orange (key shadow): hsl(25, 99%, 27%)\n\n// - Light grayish yellow (key background): hsl(45, 7%, 89%)\n// - Dark grayish orange (key shadow): hsl(35, 11%, 61%)\n\n// #### Text\n\n// - Very dark grayish yellow: hsl(60, 10%, 19%)\n// - White (text): hsl(0, 0, 100%)\n\n// ### Theme 3\n\n// #### Backgrounds\n\n// - Very dark violet (main background): hsl(268, 75%, 9%)\n// - Very dark violet (toggle background, keypad background, screen background): hsl(268, 71%, 12%)\n\n// #### Keys\n\n// - Dark violet (key background): hsl(281, 89%, 26%)\n// - Vivid magenta (key shadow): hsl(285, 91%, 52%)\n\n// - Pure cyan (key background, toggle): hsl(176, 100%, 44%)\n// - Soft cyan (key shadow): hsl(177, 92%, 70%)\n\n// - Very dark violet (key background): hsl(268, 47%, 21%)\n// - Dark magenta (key shadow): hsl(290, 70%, 36%)\n\n// #### Text\n\n// - Light yellow: hsl(52, 100%, 62%)\n// - Very dark blue: hsl(198, 20%, 13%)\n// - White (text): hsl(0, 0, 100%)\n\n// ## Typography\n\n// ### Body Copy\n\n// - Font size (numbers): 32px\n\n// ### Font\n\n// - Family: [Spartan](https://fonts.google.com/specimen/Spartan)\n// - Weights: 700\n","import CalculatorComp from \"./Calculator\";\nimport { ThemeProvider } from \"styled-components\";\nimport { useContext } from \"react\";\nimport { Context } from \"./Context\";\nimport { themes, GlobalStyles } from \"./themes/themes\";\n\nfunction App() {\n  const { selection } = useContext(Context);\n  return (\n    <ThemeProvider theme={themes[selection]}>\n      <GlobalStyles />\n      <CalculatorComp />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ContextProvider } from \"./Context\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}